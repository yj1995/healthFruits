{"version":3,"sources":["Common/JS/ErrorBoundary.jsx","BackgroundLoader.jsx","App.js","serviceWorker.js","index.js"],"names":["ErrorBoundary","props","state","hasError","error","info","this","setState","children","React","Component","withRouter","BackgroundLoader","class","Home","lazy","App","err","history","push","pathname","Suspense","fallback","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"6TAMMA,G,0EAEF,WAAYC,GAAQ,IAAD,8BAEjB,cAAMA,IAEDC,MAAQ,CAAEC,UAAU,GAJR,E,8DAUDC,EAAOC,GAIvBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAU1B,OAAIG,KAAKJ,MAAMC,SAIN,+EAIFG,KAAKL,MAAMO,a,GAlCIC,IAAMC,YA0CjBC,cAAWX,GCoCbY,EAlFU,WACrB,OACI,6BACI,yBAAKC,MAAM,4BACP,yBAAKA,MAAM,iCACX,yBAAKA,MAAM,kCACX,yBAAKA,MAAM,mCACX,yBAAKA,MAAM,oCACX,yBAAKA,MAAM,qCACX,yBAAKA,MAAM,sCACX,yBAAKA,MAAM,uCACX,yBAAKA,MAAM,kCACX,yBAAKA,MAAM,wCACX,yBAAKA,MAAM,0CACX,yBAAKA,MAAM,yCACX,yBAAKA,MAAM,yCACX,yBAAKA,MAAM,yCAEf,yBAAKA,MAAM,4BACP,yBAAKA,MAAM,iCACX,yBAAKA,MAAM,kCACX,yBAAKA,MAAM,mCACX,yBAAKA,MAAM,oCACX,yBAAKA,MAAM,qCACX,yBAAKA,MAAM,sCACX,yBAAKA,MAAM,uCACX,yBAAKA,MAAM,kCACX,yBAAKA,MAAM,wCACX,yBAAKA,MAAM,0CACX,yBAAKA,MAAM,yCACX,yBAAKA,MAAM,yCACX,yBAAKA,MAAM,yCAEf,yBAAKA,MAAM,4BACP,yBAAKA,MAAM,iCACX,yBAAKA,MAAM,kCACX,yBAAKA,MAAM,mCACX,yBAAKA,MAAM,oCACX,yBAAKA,MAAM,qCACX,yBAAKA,MAAM,sCACX,yBAAKA,MAAM,uCACX,yBAAKA,MAAM,kCACX,yBAAKA,MAAM,wCACX,yBAAKA,MAAM,0CACX,yBAAKA,MAAM,yCACX,yBAAKA,MAAM,yCACX,yBAAKA,MAAM,yCAEf,yBAAKA,MAAM,4BACP,yBAAKA,MAAM,iCACX,yBAAKA,MAAM,kCACX,yBAAKA,MAAM,mCACX,yBAAKA,MAAM,oCACX,yBAAKA,MAAM,qCACX,yBAAKA,MAAM,sCACX,yBAAKA,MAAM,uCACX,yBAAKA,MAAM,kCACX,yBAAKA,MAAM,wCACX,yBAAKA,MAAM,0CACX,yBAAKA,MAAM,yCACX,yBAAKA,MAAM,yCACX,yBAAKA,MAAM,yCAEf,yBAAKA,MAAM,4BACP,yBAAKA,MAAM,iCACX,yBAAKA,MAAM,kCACX,yBAAKA,MAAM,mCACX,yBAAKA,MAAM,oCACX,yBAAKA,MAAM,qCACX,yBAAKA,MAAM,sCACX,yBAAKA,MAAM,uCACX,yBAAKA,MAAM,kCACX,yBAAKA,MAAM,wCACX,yBAAKA,MAAM,0CACX,yBAAKA,MAAM,yCACX,yBAAKA,MAAM,yCACX,yBAAKA,MAAM,2CCtErBC,EAAOL,IAAMM,MAAK,kBAAM,sDAyBfC,E,gLApBKC,GAChBX,KAAKL,MAAMiB,QAAQC,KAAK,CACtBC,SAAU,Q,+BAIZ,OACE,kBAAC,EAAD,KACE,6BACE,kBAAC,IAAMC,SAAP,CAAgBC,SAAU,kBAAC,EAAD,OACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWX,Y,GAb7BL,IAAMC,WCCJgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,IAAD,KAAQ,kBAAC,EAAD,OAAkBC,SAASC,eAAe,SD4H5D,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAArC,GACLsC,QAAQtC,MAAMA,EAAMuC,c","file":"static/js/main.41f2fa46.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport {BrowserRouter, Route, Switch, withRouter} from 'react-router-dom';\r\n\r\n \r\n\r\nclass ErrorBoundary extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n      super(props);\r\n\r\n      this.state = { hasError: false };\r\n\r\n    }\r\n\r\n  \r\n\r\n    componentDidCatch(error, info) {\r\n\r\n      // Display fallback UI\r\n\r\n      this.setState({ hasError: true });\r\n\r\n      \r\n\r\n    }\r\n\r\n  \r\n\r\n    render() {\r\n\r\n      if (this.state.hasError) {\r\n\r\n        // You can render any custom fallback UI\r\n\r\n        return <h2>Error occurred!!! please contact administrator.</h2>;\r\n\r\n      }\r\n\r\n      return this.props.children;\r\n\r\n    }\r\n\r\n  }\r\n\r\n \r\n\r\n  export default withRouter(ErrorBoundary);\r\n\r\n ","import React from 'react';\r\n\r\nconst BackgroundLoader = () => {\r\n    return (\r\n        <div>\r\n            <div class=\"content-loading mt-4 P-4\">\r\n                <div class=\"background-masker header-top\"></div>\r\n                <div class=\"background-masker header-left\"></div>\r\n                <div class=\"background-masker header-right\"></div>\r\n                <div class=\"background-masker header-bottom\"></div>\r\n                <div class=\"background-masker subheader-left\"></div>\r\n                <div class=\"background-masker subheader-right\"></div>\r\n                <div class=\"background-masker subheader-bottom\"></div>\r\n                <div class=\"background-masker content-top\"></div>\r\n                <div class=\"background-masker content-first-end\"></div>\r\n                <div class=\"background-masker content-second-line\"></div>\r\n                <div class=\"background-masker content-second-end\"></div>\r\n                <div class=\"background-masker content-third-line\"></div>\r\n                <div class=\"background-masker content-third-end\"></div>\r\n            </div>\r\n            <div class=\"content-loading mt-4 P-4\">\r\n                <div class=\"background-masker header-top\"></div>\r\n                <div class=\"background-masker header-left\"></div>\r\n                <div class=\"background-masker header-right\"></div>\r\n                <div class=\"background-masker header-bottom\"></div>\r\n                <div class=\"background-masker subheader-left\"></div>\r\n                <div class=\"background-masker subheader-right\"></div>\r\n                <div class=\"background-masker subheader-bottom\"></div>\r\n                <div class=\"background-masker content-top\"></div>\r\n                <div class=\"background-masker content-first-end\"></div>\r\n                <div class=\"background-masker content-second-line\"></div>\r\n                <div class=\"background-masker content-second-end\"></div>\r\n                <div class=\"background-masker content-third-line\"></div>\r\n                <div class=\"background-masker content-third-end\"></div>\r\n            </div>\r\n            <div class=\"content-loading mt-4 P-4\">\r\n                <div class=\"background-masker header-top\"></div>\r\n                <div class=\"background-masker header-left\"></div>\r\n                <div class=\"background-masker header-right\"></div>\r\n                <div class=\"background-masker header-bottom\"></div>\r\n                <div class=\"background-masker subheader-left\"></div>\r\n                <div class=\"background-masker subheader-right\"></div>\r\n                <div class=\"background-masker subheader-bottom\"></div>\r\n                <div class=\"background-masker content-top\"></div>\r\n                <div class=\"background-masker content-first-end\"></div>\r\n                <div class=\"background-masker content-second-line\"></div>\r\n                <div class=\"background-masker content-second-end\"></div>\r\n                <div class=\"background-masker content-third-line\"></div>\r\n                <div class=\"background-masker content-third-end\"></div>\r\n            </div>\r\n            <div class=\"content-loading mt-4 P-4\">\r\n                <div class=\"background-masker header-top\"></div>\r\n                <div class=\"background-masker header-left\"></div>\r\n                <div class=\"background-masker header-right\"></div>\r\n                <div class=\"background-masker header-bottom\"></div>\r\n                <div class=\"background-masker subheader-left\"></div>\r\n                <div class=\"background-masker subheader-right\"></div>\r\n                <div class=\"background-masker subheader-bottom\"></div>\r\n                <div class=\"background-masker content-top\"></div>\r\n                <div class=\"background-masker content-first-end\"></div>\r\n                <div class=\"background-masker content-second-line\"></div>\r\n                <div class=\"background-masker content-second-end\"></div>\r\n                <div class=\"background-masker content-third-line\"></div>\r\n                <div class=\"background-masker content-third-end\"></div>\r\n            </div>\r\n            <div class=\"content-loading mt-4 P-4\">\r\n                <div class=\"background-masker header-top\"></div>\r\n                <div class=\"background-masker header-left\"></div>\r\n                <div class=\"background-masker header-right\"></div>\r\n                <div class=\"background-masker header-bottom\"></div>\r\n                <div class=\"background-masker subheader-left\"></div>\r\n                <div class=\"background-masker subheader-right\"></div>\r\n                <div class=\"background-masker subheader-bottom\"></div>\r\n                <div class=\"background-masker content-top\"></div>\r\n                <div class=\"background-masker content-first-end\"></div>\r\n                <div class=\"background-masker content-second-line\"></div>\r\n                <div class=\"background-masker content-second-end\"></div>\r\n                <div class=\"background-masker content-third-line\"></div>\r\n                <div class=\"background-masker content-third-end\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackgroundLoader;","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './css/App.scss';\r\nimport './LazyLoader/css/LazyLoader.css';\r\nimport ErrorBoundary from './Common/JS/ErrorBoundary';\r\nimport BackgroundLoader from './BackgroundLoader';\r\nconst Home = React.lazy(() => import('./Home/View/Home'));\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidCatch(err) {\r\n    this.props.history.push({\r\n      pathname: '/',\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <ErrorBoundary>\r\n        <div>\r\n          <React.Suspense fallback={<BackgroundLoader />}>\r\n            <BrowserRouter>\r\n              <Route exact path=\"/\" component={Home} />\r\n            </BrowserRouter>\r\n          </React.Suspense>\r\n        </div>\r\n      </ErrorBoundary>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport{BrowserRouter as Router} from 'react-router-dom';\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}